import yaml
import sys

sys.path.append(".")
from molgri.paths import PATH_INPUT_BASEGRO

PATH_EXPERIMENTS = "ex_exp/"

ALL_SQRA_EXPERIMENTS = {"grid": {"80_80_very_short": {"num_orientations": 80,
                                                 "num_directions": 80,
                                                 "radial_distances_nm": 'linspace(0.2, 0.4, 10)',
                                                 "factor_orientation_to_position":1,
                                                 "position_grid_is_cartesian": False},
                                 "cartesian_80_80_very_short": {"num_orientations": 80,
                                                           "num_directions": 80,
                                                           "radial_distances_nm": 'linspace(0.2, 0.4, 10)',
                                                           "factor_orientation_to_position":1,
                                                           "position_grid_is_cartesian": True}
                                 },
                        "setup": {"tau_t_1": {"tau_t": 1},
                                  "tau_t_2": {"tau_t": 0.1},
                                  "tau_t_3": {"tau_t": 0.01},
                                  "tau_t_4": {"tau_t": 0.001},
                                  }}

rule all:
    input:
        config_files = expand(f"{PATH_EXPERIMENTS}{{experiment_type}}/{{experiment_id}}/{{grid_id}}/total_benchmark.txt",
            experiment_id=ALL_SQRA_EXPERIMENTS["setup"].keys(),
            grid_id=ALL_SQRA_EXPERIMENTS["grid"].keys(),
            experiment_type="sqra_water_in_vacuum"),



rule create_config_all_sqra_water_in_vacuum:
    """
    Prepare configuration files to feed into sqra pipeline. This might change but currently means:
    - grids 80_80_very_short and cartesian_80_80_very_short
    - tau_t = 1, 0.1, 0.01 and 0.001 ps
    """
    input:
        default_config = f"{PATH_INPUT_BASEGRO}default_configuration_file.yaml"
    output:
        config = f"{PATH_EXPERIMENTS}{{experiment_type}}/{{experiment_id}}/{{grid_id}}/config_file.yaml"
    run:
        # prepare grid config files
        my_grid_dict = ALL_SQRA_EXPERIMENTS["grid"][wildcards.grid_id]
        my_experiment_dict = ALL_SQRA_EXPERIMENTS["setup"][wildcards.experiment_id]

        with open(input.default_config,'r') as f:
            doc = yaml.safe_load(f)

        # change the keywords
        doc["experiment_id"] = wildcards.experiment_id
        doc["experiment_type"] = wildcards.experiment_type
        doc["grid_identifier"] = wildcards.grid_id

        # change grid params
        for key, value in my_grid_dict.items():
            doc["params_grid"][key] = value

        # change setup params
        for key, value in my_experiment_dict.items():
            doc["params_setup"][key] = value

        with open(output.config,"w") as f:
            yaml.dump(doc,f)

rule run_all_sqra_water_in_vacuum:
    """
    In the shell run each of configuration set-ups.
    """
    input:
        config_file = f"{PATH_EXPERIMENTS}{{experiment_type}}/{{experiment_id}}/{{grid_id}}/config_file.yaml",
        pipeline = "workflow/run_sqra"
    benchmark:
        f"{PATH_EXPERIMENTS}{{experiment_type}}/{{experiment_id}}/{{grid_id}}/total_benchmark.txt"
    resources:
        cores = 10
    shell:
        "snakemake --snakefile {input.pipeline} --cores {resources.cores} --configfile {input.config_file}"
