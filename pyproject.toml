[tool.poetry]
name = "molgri"
version = "1.3.6"
description = "Generate molecular pseudotrajectories based on rotational grids."
authors = ["Hana Zupan <hana.zupan@fu-berlin.de>"]
license = "LICENSE"
readme = "README.md"
#dynamic = ["dependencies"]
keywords = ["pseudotrajectory", "molecular grids", "association", "state space discretisation"]
packages = [
    { include = "molgri/scripts" },
    { include = "molgri/molecules" },
    { include = "molgri/space" },
    { include = "molgri/plotting" },
    { include = "molgri" },
]
repository = "https://github.com/bkellerlab/molecularRotationalGrids"
homepage = "https://www.bcp.fu-berlin.de/en/chemie/chemie/forschung/PhysTheoChem/agkeller/index.html"
documentation = "https://molgri.readthedocs.io/en/main/"

[tool.poetry.dependencies]
python = ">=3.8"
matplotlib = "~=3.6.2"
MDAnalysis = "~=2.3.0"
networkx = "~=2.8.8"
numpy = "~=1.23.5"
pandas = "~=1.5.2"
scipy = "~=1.9.3"
seaborn = "~=0.12.1"
setuptools  = ">=65.5.1"
Pillow = ">=9.3.0"
ipython = "~=8.10.0"
tqdm = "~=4.64.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
#requires = {file = "requirements.txt"}#["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.scripts]
molgri-grid = "molgri.scripts.generate_grid:run_generate_grid"
molgri-pt = "molgri.scripts.generate_pt:run_generate_pt"
molgri-io = "molgri.scripts.set_up_io:parse_and_create"
molgri-energy = "molgri.scripts.generate_energy:run_generate_energy"

#[tool.setuptools.dynamic]
#dependencies = {file = "requirements.txt"}

[tool.setuptools.package-data]
mypkg = ["molgri/examples/*.gro", "molgri/examples/*.pdb", "molgri/examples/*.xtc", "molgri/examples/*.xvg",
"molgri/examples/*.xyz"]